{
    // Use IntelliSense to learn about possible Node.js debug attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Build Realm Android",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/scripts/build-android.js",
            "args": [
                "--arch=x86"
            ],
            "request": "launch",
            "type": "node"
        },
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "node",
            "args": [
                "--expose_gc",
                "${workspaceRoot}/tests/node_modules/jasmine/bin/jasmine.js",
                "spec/unit_tests.js",
                "--filter=."
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceRoot}/tests",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Node Unit Tests (rebuild)",
            "preLaunchTask": "rebuild-node-tests",
            "cwd": "${workspaceRoot}/tests",
            "program": "${workspaceRoot}/tests/node_modules/jasmine/bin/jasmine.js",
            "runtimeArgs": [
                "--expose_gc"
            ],
            "args": [
                "spec/unit_tests.js",
                "--filter=."
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Node Unit Tests",
            "cwd": "${workspaceRoot}/tests",
            "program": "${workspaceRoot}/tests/node_modules/jasmine/bin/jasmine.js",
            "runtimeArgs": [
                "--expose_gc"
            ],
            "args": [
                "spec/unit_tests.js",
                "--filter=."
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Start Stitch in Docker",
            "cwd": "${workspaceRoot}/scripts",
            "preLaunchTask": "start_stitch"
        },
        {
            "type": "node",
            "request": "attach",
            "name": "Attach to Port",
            "protocol": "inspector",
            "address": "localhost",
            "port": 5858
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "LLDB Launch Unit Tests",
            "program": "node",
            "args": [
                "--expose_gc",
                "${workspaceFolder}/tests/node_modules/jasmine/bin/jasmine.js",
                "spec/unit_tests.js",
                "--filter=${input:testFilter}"
            ],
            "cwd": "${workspaceFolder}/tests"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "LLDB Node REPL",
            "program": "node",
            "args": [
                "--expose_gc"
            ],
            "preLaunchTask": "Build Node Tests"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "LLDB Debug Integration Tests",
            "program": "node",
            "args": [
                "--expose_gc",
                "node_modules/mocha/bin/mocha",
                "--require",
                "ts-node/register/transpile-only",
                "--require",
                "src/node/inject-globals.ts",
                "src/index.ts",
                "--timeout",
                "10000",
                "--grep",
                "${input:integrationTestFilter}"
            ],
            "cwd": "${workspaceFolder}/integration-tests/tests",
            "preLaunchTask": "Build Node Tests"
        },
        {
            "type": "node",
            "name": "vscode-jest-tests",
            "request": "launch",
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "disableOptimisticBPs": true,
            "cwd": "${workspaceFolder}/packages/realm-react",
            "runtimeExecutable": "npm",
            "args": [
                "run",
                "test",
                "--",
                "--runInBand",
                "--watchAll=false",
                "--testNamePattern=${input:testNamePattern}"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Current JS file",
            "program": "${relativeFile}",
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "LLDB Debug JS file",
            "program": "node",
            "args": [
                "${relativeFile}"
            ],
        },
    ],
    "compounds": [
        {
            "name": "Start Server + Debug",
            "configurations": [
                "Start Stitch in Docker",
                "Debug Node Unit Tests (rebuild)"
            ]
        },
        {
            "name": "Debug GDB + NodeJS",
            "configurations": [
                "(gdb) Launch",
                "Attach to Port"
            ]
        }
    ],
    "inputs": [
        {
            "id": "testFilter",
            "type": "promptString",
            "default": ".",
            "description": "Filtering used to limit what tests are run"
        },
        {
            "id": "integrationTestFilter",
            "type": "promptString",
            "default": "",
            "description": "Filtering used to limit what tests are run"
        },
        {
            "id": "testNamePattern",
            "type": "promptString",
            "default": "",
            "description": "Jest test name pattern for filtering by test description name"
        }
    ]
}
