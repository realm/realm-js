name: Install test (React Native)

on:
  # Any change to these files
  push:
    paths:
      - install-tests/react-native/**
      - .github/workflows/install-test-react-native.yml
  # Every monday at 9:00 CET
  schedule:
    - cron: "0 8 * * 1"
  # You can also activate this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: install-tests/react-native

jobs:
  install:
    name: Install test on ${{ matrix.platform }} (new architecture ${{ matrix.new-architecture && 'enabled' || 'disabled' }}, realm@${{ matrix.realm-version }}, react-native@${{ matrix.react-native-version }}, using Xcode v${{matrix.xcode}}, node v${{ matrix.node }})
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ios
          - android
        # See https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md#xcode
        xcode:
          - 14.0.1
          # - 13.1
        node:
          - 16
        realm-version:
          - latest
        react-native-version:
          - latest
          - next
          # - nightly # Enable if it's not too noizy
        new-architecture:
          - true
          - false
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: install-test
      - name: Prepend ccache executables to the PATH
        run: echo PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV

      # TODO: Remove if this becomes unneeded in the future
      - name: Invoke the simulator (making subsequent "open -a Simulator" calls work)
        if: ${{ matrix.platform == 'ios' }}
        run: open -a ${{ env.DEVELOPER_DIR }}/Contents/Developer/Applications/Simulator.app/Contents/MacOS/Simulator

      - name: Install dependencies of the CLI
        run: npm ci

      - name: Initialize app (iOS)
        if: ${{ matrix.platform == 'ios' }}
        run: npm run init -- --realm-version ${{ matrix.realm-version }} --react-native-version ${{ matrix.react-native-version }}

      - name: Initialize app (Android)
        if: ${{ matrix.platform == 'android' }}
        run: npm run init -- --skip-ios --realm-version ${{ matrix.realm-version }} --react-native-version ${{ matrix.react-native-version }}

      - name: Run test (iOS)
        if: ${{ matrix.platform == 'ios' }}
        run: npm test -- --platform ios

      - name: Run test (Android)
        if: ${{ matrix.platform == 'android' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          script: npm test -- --platform android
          working-directory: install-tests/react-native

      - name: Post result to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          # TODO: Include a URL deep linking into the job
          # So far, we only know how to build the URL of the run:
          # ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "**Install test ${{ job.status }}**\nTested ${{ matrix.platform }}, new architecture ${{ matrix.new-architecture && 'enabled' || 'disabled' }}, realm@${{ matrix.realm-version }}, react-native@${{ matrix.react-native-version }}, using Xcode v${{matrix.xcode}}, node v${{ matrix.node }}."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TEST_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
