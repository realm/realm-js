# This workflow builds the TypeDoc documentation and publishes it to https://docs.mongodb.com/realm-sdks/
# It will determine if it's a pre-release or an official release
# and publish to the appropriate location based on package name and version.
# pre-releases are published to /next
# releases are published to /latest and the base URL
# all releases are published to /<version>

name: Publish Docs
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: manually set the tag for the desired documentation location
        required: true
        type: string

env:
  REALM_DISABLE_ANALYTICS: 1
jobs:
  publish:
    name: Build & Publish Realm Docs
    runs-on: ubuntu-latest
    steps:
      - uses: realm/ci-actions/parse-release-tag@andrew/parse-tag
        id: parse-release-tag
        with:
          release-tag: ${{ github.event.inputs.tag || github.ref_name }}
      - uses: kanga333/variable-mapper@v0.3.0
        name: Map package to environment variables
        with:
          key: ${{steps.parse-release-tag.outputs.package-name}}
          map: |
            {
              "realm-react": {
                "URL_SLUG": "react"
              },
              "realm-web": {
                "URL_SLUG": "web"
              },
              "realm": {
                "URL_SLUG": "js"
              }
            }
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      # Install the root package (--ignore-scripts to avoid downloading or building the native module)
      - name: Install root package dependencies
        run: npm ci --ignore-scripts
      - name: Build docs
        working-directory: packages/${{ steps.parse-release-tag.outputs.package-name }}
        run: npm run docs
      - name: Set up S3 cmd and configure AWS credentials
        uses: s3-actions/s3cmd@v1.1
        with:
          provider: aws
          region: "us-west-1"
          access_key: ${{ secrets.DOCS_S3_ACCESS_KEY }}
          secret_key: ${{ secrets.DOCS_S3_SECRET_KEY }}
      - name: Set up S3 base URL for packages
        run: echo "S3_BASE_URL=s3://${{ secrets.DOCS_S3_BUCKET_NAME }}/docs/realm-sdks/${{env.URL_SLUG}}" >> $GITHUB_ENV
      # --no-mime-magic --guess-mime-type flags to work around CSS incorrect MIME type issue
      # (https://stackoverflow.com/questions/53708938/s3cmd-flagging-css-with-wrong-mime-type)
      - name: Upload versioned docs (for archival)
        working-directory: packages/${{ steps.parse-release-tag.outputs.package-name }}
        run: s3cmd put --recursive --acl-public --no-mime-magic --guess-mime-type docs/ ${{ env.S3_BASE_URL }}/${{ steps.parse-release-tag.outputs.package-version }}/
      - name: Upload prerelease docs
        if: steps.parse-release-tag.outputs.prerelease == 'true'
        working-directory: packages/${{ steps.parse-release-tag.outputs.package-name }}
        run: s3cmd put --recursive --acl-public --no-mime-magic --guess-mime-type docs/ ${{ env.S3_BASE_URL }}/next/
      - name: Upload latest docs (to live site)
        if: steps.parse-release-tag.outputs.prerelease == 'false'
        working-directory: packages/${{ steps.parse-release-tag.outputs.package-name }}
        run: |
          s3cmd put --recursive --acl-public --no-mime-magic --guess-mime-type docs/ ${{ env.S3_BASE_URL }}/latest/
